{"version":3,"sources":["components/MovieDetailsPage/Reviews/index.jsx"],"names":["Reviews","state","reviewsList","movieId","this","props","location","pathname","split","getMovieReviews","reviewsResponse","setState","results","length","map","item","key","id","author","content","Component"],"mappings":"2NAGMA,E,4MACJC,MAAQ,CACNC,YAAa,I,2LAIPC,EAAUC,KAAKC,MAAMC,SAASC,SAASC,MAAM,KAAK,G,SAC1BC,YAAgBN,G,OAAxCO,E,OACNN,KAAKO,SAAS,CAAET,YAAaQ,EAAgBE,U,qIAI7C,OACE,4BACGR,KAAKH,MAAMC,YAAYW,OAAST,KAAKH,MAAMC,YAAYY,KAAI,SAACC,GAAD,OAC1D,wBAAIC,IAAKD,EAAKE,IACZ,uCAAaF,EAAKG,QAClB,2BAAIH,EAAKI,aAER,mD,GAnBSC,aAyBPpB","file":"static/js/movied-details-reviews.add80025.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { getMovieReviews } from '../../../api/movies';\n\nclass Reviews extends Component {\n  state = {\n    reviewsList: [],\n  }\n\n  async componentDidMount() {\n    const movieId = this.props.location.pathname.split('/')[2];\n    const reviewsResponse = await getMovieReviews(movieId);\n    this.setState({ reviewsList: reviewsResponse.results });\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.reviewsList.length ? this.state.reviewsList.map((item) => (\n          <li key={item.id}>\n            <h4>Author: {item.author}</h4>\n            <p>{item.content}</p>\n          </li>\n        )) : \"Sorry we don't have reviews for this movie.\"}\n      </ul>\n    )\n  }\n}\n\nexport default Reviews;\n"],"sourceRoot":""}